spring:
  application:
    name: pathprep-backend
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/pathprep-ai}
      database: ${MONGODB_DATABASE:pathprep-ai}
      auto-index-creation: ${MONGODB_AUTO_INDEX_CREATION:true}
      auto-create-indexes: ${MONGODB_AUTO_CREATE_INDEXES:true}
      authentication-database: admin
      
      # SSL Configuration
      ssl:
        enabled: ${MONGODB_SSL_ENABLED:false}
        invalid-host-name-allowed: ${MONGODB_SSL_INVALID_HOSTNAME_ALLOWED:true}
      
      # Connection Settings
      application-name: ${spring.application.name}
      retry-writes: true
      retry-reads: true
      read-preference: ${MONGODB_READ_PREFERENCE:primary}
      
      # Timeout Settings
      connect-timeout: ${MONGODB_CONNECT_TIMEOUT:10000}
      socket-timeout: ${MONGODB_SOCKET_TIMEOUT:60000}
      server-selection-timeout: ${MONGODB_SERVER_SELECTION_TIMEOUT:30000}
      
      # Connection Pool Settings
      min-connections: ${MONGODB_MIN_CONNECTIONS:10}
      max-connections: ${MONGODB_MAX_CONNECTIONS:100}
      max-wait-time: ${MONGODB_MAX_WAIT_TIME:120000}
      max-connection-life-time: ${MONGODB_MAX_CONNECTION_LIFE_TIME:300000}
      max-connection-idle-time: ${MONGODB_MAX_CONNECTION_IDLE_TIME:60000}
      
      # Additional MongoDB Options
      option:
        sslInvalidHostNameAllowed: ${MONGODB_SSL_INVALID_HOSTNAME_ALLOWED:true}
        sslEnabled: ${MONGODB_SSL_ENABLED:false}
        readPreference: ${MONGODB_READ_PREFERENCE:primary}
        retryWrites: true
        retryReads: true
        serverSelectionTimeoutMS: 30000
        connectTimeoutMS: 10000
        socketTimeoutMS: 60000
        maxIdleTimeMS: 60000
        maxLifeTimeMS: 300000
        maxPoolSize: 100
        minPoolSize: 10
        waitQueueTimeoutMS: 120000
  mvc:
    cors:
      mappings:
        "/**":
          allowed-origins: "*"
          allowed-methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          allowed-headers: "*"
          max-age: 3600
  profiles:
    include: secrets

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH:/api}

# SpringDoc OpenAPI Configuration
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    use-root-path: true
    disable-swagger-default-url: true
    urls:
      - url: /v3/api-docs
        name: API V1
  api-docs:
    path: /v3/api-docs
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  show-actuator: false
  cache:
    disabled: true

groq:
  base-url: ${GROQ_BASE_URL:https://api.groq.com/openai/v1}
  api-key: ${GROQ_API_KEY:}
  timeout: ${GROQ_TIMEOUT:30s}
  max-retries: ${GROQ_MAX_RETRIES:3}
  models:
    default: ${GROQ_MODEL_DEFAULT:llama3-8b-8192}
    fast: ${GROQ_MODEL_FAST:llama3-8b-8192}
    smart: ${GROQ_MODEL_SMART:llama3-70b-8192}
    code: ${GROQ_MODEL_CODE:codellama-34b-instruct}

groq-rate-limit:
  requests-per-minute: ${GROQ_RATE_LIMIT_PER_MINUTE:30}
  requests-per-day: ${GROQ_RATE_LIMIT_PER_DAY:14400}

# Application settings
pathprep:
  show-actuator: true
  paths-to-match: /api/**
  packages-to-scan: com.pathprep.controller

# Logging configuration
logging:
  level:
    com.pathprep: ${LOGGING_LEVEL_COM_PATH_PREP:INFO}
    org.springframework.web: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
    org.springdoc: ${LOGGING_LEVEL_ORG_SPRINGDOC:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
  health:
    mongo:
      enabled: true


  logging:
    level:
      org:
        springframework:
          web:
            filter:
              CommonsRequestLoggingFilter: DEBUG
    pattern:
      console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
